<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="10" failed="0" total="10" passed="0">
  <reporter-output>
    <line>
      <![CDATA[About to begin executing Test Test Results]]>
    </line>
    <line>
      <![CDATA[Total number of rows in the sheet...5]]>
    </line>
    <line>
      <![CDATA[Total number of rows in the sheet...5]]>
    </line>
    <line>
      <![CDATA[Total number of rows in the sheet...5]]>
    </line>
    <line>
      <![CDATA[Total number of rows in the sheet...5]]>
    </line>
    <line>
      <![CDATA[Total number of rows in the sheet...5]]>
    </line>
    <line>
      <![CDATA[Total number of rows in the sheet...5]]>
    </line>
    <line>
      <![CDATA[listOfTestCases=============*****************[TC001, TC002, TC003, TC004, TC005]]]>
    </line>
    <line>
      <![CDATA[Test Started-> ]]>
    </line>
    <line>
      <![CDATA[Test Skipped-> ]]>
    </line>
    <line>
      <![CDATA[Test Started-> ]]>
    </line>
    <line>
      <![CDATA[Test Skipped-> ]]>
    </line>
    <line>
      <![CDATA[Test Started-> ]]>
    </line>
    <line>
      <![CDATA[Test Skipped-> ]]>
    </line>
    <line>
      <![CDATA[Test Started-> ]]>
    </line>
    <line>
      <![CDATA[Test Skipped-> ]]>
    </line>
    <line>
      <![CDATA[Test Started-> ]]>
    </line>
    <line>
      <![CDATA[Test Skipped-> ]]>
    </line>
    <line>
      <![CDATA[About to end executing Test Test Results]]>
    </line>
    <line>
      <![CDATA[About to begin executing Test Test Results]]>
    </line>
    <line>
      <![CDATA[Total number of rows in the sheet...5]]>
    </line>
    <line>
      <![CDATA[Total number of rows in the sheet...5]]>
    </line>
    <line>
      <![CDATA[Total number of rows in the sheet...5]]>
    </line>
    <line>
      <![CDATA[Total number of rows in the sheet...5]]>
    </line>
    <line>
      <![CDATA[Total number of rows in the sheet...5]]>
    </line>
    <line>
      <![CDATA[Total number of rows in the sheet...5]]>
    </line>
    <line>
      <![CDATA[listOfTestCases=============*****************[TC001, TC002, TC003, TC004, TC005, TC001, TC002, TC003, TC004, TC005]]]>
    </line>
    <line>
      <![CDATA[Test Started-> ]]>
    </line>
    <line>
      <![CDATA[Test Skipped-> ]]>
    </line>
    <line>
      <![CDATA[Test Started-> ]]>
    </line>
    <line>
      <![CDATA[Test Skipped-> ]]>
    </line>
    <line>
      <![CDATA[Test Started-> ]]>
    </line>
    <line>
      <![CDATA[Test Skipped-> ]]>
    </line>
    <line>
      <![CDATA[Test Started-> ]]>
    </line>
    <line>
      <![CDATA[Test Skipped-> ]]>
    </line>
    <line>
      <![CDATA[Test Started-> ]]>
    </line>
    <line>
      <![CDATA[Test Skipped-> ]]>
    </line>
    <line>
      <![CDATA[Test Started-> ]]>
    </line>
    <line>
      <![CDATA[Test Skipped-> ]]>
    </line>
    <line>
      <![CDATA[Test Started-> ]]>
    </line>
    <line>
      <![CDATA[Test Skipped-> ]]>
    </line>
    <line>
      <![CDATA[Test Started-> ]]>
    </line>
    <line>
      <![CDATA[Test Skipped-> ]]>
    </line>
    <line>
      <![CDATA[Test Started-> ]]>
    </line>
    <line>
      <![CDATA[Test Skipped-> ]]>
    </line>
    <line>
      <![CDATA[Test Started-> ]]>
    </line>
    <line>
      <![CDATA[Test Skipped-> ]]>
    </line>
    <line>
      <![CDATA[About to end executing Test Test Results]]>
    </line>
  </reporter-output>
  <suite name="Sample Suite" duration-ms="957" started-at="2020-01-31T07:54:32Z" finished-at="2020-01-31T07:54:33Z">
    <groups>
    </groups>
    <test name="Test Results" duration-ms="957" started-at="2020-01-31T07:54:32Z" finished-at="2020-01-31T07:54:33Z">
      <class name="com.testautomation.util.ExecuteTestCases">
        <test-method status="FAIL" signature="setup()[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="setup" is-config="true" duration-ms="0" started-at="2020-01-31T13:24:32Z" finished-at="2020-01-31T13:24:32Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.testautomation.util.ExcelLibrary.getRows(ExcelLibrary.java:104)
	at com.testautomation.util.ExcelAction.readTestCaseInExcel(ExcelAction.java:347)
	at com.testautomation.util.ExecuteTestCases.setup(ExecuteTestCases.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at com.testautomation.MainTestNG.testng(MainTestNG.java:173)
	at com.testautomation.MainTestNG.startTest(MainTestNG.java:117)
	at com.testautomation.controller.FirstController.startTest(FirstController.java:139)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
            <line>
              <![CDATA[Total number of rows in the sheet...5]]>
            </line>
            <line>
              <![CDATA[Total number of rows in the sheet...5]]>
            </line>
            <line>
              <![CDATA[Total number of rows in the sheet...5]]>
            </line>
            <line>
              <![CDATA[Total number of rows in the sheet...5]]>
            </line>
            <line>
              <![CDATA[Total number of rows in the sheet...5]]>
            </line>
            <line>
              <![CDATA[Total number of rows in the sheet...5]]>
            </line>
            <line>
              <![CDATA[listOfTestCases=============*****************[TC001, TC002, TC003, TC004, TC005, TC001, TC002, TC003, TC004, TC005]]]>
            </line>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="testData([Ljava.lang.Object;)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="testData" is-config="true" duration-ms="0" started-at="2020-01-31T13:24:33Z" finished-at="2020-01-31T13:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testData -->
        <test-method status="SKIP" signature="testSample1(java.lang.String)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="testSample1" duration-ms="6" started-at="2020-01-31T13:24:33Z" data-provider="dp" finished-at="2020-01-31T13:24:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC001]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSample1 -->
        <test-method status="SKIP" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="setResultTestName" is-config="true" duration-ms="0" started-at="2020-01-31T13:24:33Z" finished-at="2020-01-31T13:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="SKIP" signature="testData([Ljava.lang.Object;)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="testData" is-config="true" duration-ms="0" started-at="2020-01-31T13:24:33Z" finished-at="2020-01-31T13:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testData -->
        <test-method status="SKIP" signature="testSample1(java.lang.String)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="testSample1" duration-ms="5" started-at="2020-01-31T13:24:33Z" data-provider="dp" finished-at="2020-01-31T13:24:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC002]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSample1 -->
        <test-method status="SKIP" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="setResultTestName" is-config="true" duration-ms="0" started-at="2020-01-31T13:24:33Z" finished-at="2020-01-31T13:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="SKIP" signature="testData([Ljava.lang.Object;)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="testData" is-config="true" duration-ms="0" started-at="2020-01-31T13:24:33Z" finished-at="2020-01-31T13:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testData -->
        <test-method status="SKIP" signature="testSample1(java.lang.String)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="testSample1" duration-ms="5" started-at="2020-01-31T13:24:33Z" data-provider="dp" finished-at="2020-01-31T13:24:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC003]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSample1 -->
        <test-method status="SKIP" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="setResultTestName" is-config="true" duration-ms="0" started-at="2020-01-31T13:24:33Z" finished-at="2020-01-31T13:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="SKIP" signature="testData([Ljava.lang.Object;)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="testData" is-config="true" duration-ms="0" started-at="2020-01-31T13:24:33Z" finished-at="2020-01-31T13:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testData -->
        <test-method status="SKIP" signature="testSample1(java.lang.String)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="testSample1" duration-ms="6" started-at="2020-01-31T13:24:33Z" data-provider="dp" finished-at="2020-01-31T13:24:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC004]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSample1 -->
        <test-method status="SKIP" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="setResultTestName" is-config="true" duration-ms="0" started-at="2020-01-31T13:24:33Z" finished-at="2020-01-31T13:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="SKIP" signature="testData([Ljava.lang.Object;)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="testData" is-config="true" duration-ms="0" started-at="2020-01-31T13:24:33Z" finished-at="2020-01-31T13:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testData -->
        <test-method status="SKIP" signature="testSample1(java.lang.String)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="testSample1" duration-ms="5" started-at="2020-01-31T13:24:33Z" data-provider="dp" finished-at="2020-01-31T13:24:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC005]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSample1 -->
        <test-method status="SKIP" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="setResultTestName" is-config="true" duration-ms="0" started-at="2020-01-31T13:24:33Z" finished-at="2020-01-31T13:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="SKIP" signature="testData([Ljava.lang.Object;)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="testData" is-config="true" duration-ms="0" started-at="2020-01-31T13:24:33Z" finished-at="2020-01-31T13:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testData -->
        <test-method status="SKIP" signature="testSample1(java.lang.String)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="testSample1" duration-ms="6" started-at="2020-01-31T13:24:33Z" data-provider="dp" finished-at="2020-01-31T13:24:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC001]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSample1 -->
        <test-method status="SKIP" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="setResultTestName" is-config="true" duration-ms="0" started-at="2020-01-31T13:24:33Z" finished-at="2020-01-31T13:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="SKIP" signature="testData([Ljava.lang.Object;)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="testData" is-config="true" duration-ms="0" started-at="2020-01-31T13:24:33Z" finished-at="2020-01-31T13:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testData -->
        <test-method status="SKIP" signature="testSample1(java.lang.String)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="testSample1" duration-ms="8" started-at="2020-01-31T13:24:33Z" data-provider="dp" finished-at="2020-01-31T13:24:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC002]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSample1 -->
        <test-method status="SKIP" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="setResultTestName" is-config="true" duration-ms="0" started-at="2020-01-31T13:24:33Z" finished-at="2020-01-31T13:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="SKIP" signature="testData([Ljava.lang.Object;)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="testData" is-config="true" duration-ms="0" started-at="2020-01-31T13:24:33Z" finished-at="2020-01-31T13:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testData -->
        <test-method status="SKIP" signature="testSample1(java.lang.String)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="testSample1" duration-ms="6" started-at="2020-01-31T13:24:33Z" data-provider="dp" finished-at="2020-01-31T13:24:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC003]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSample1 -->
        <test-method status="SKIP" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="setResultTestName" is-config="true" duration-ms="0" started-at="2020-01-31T13:24:33Z" finished-at="2020-01-31T13:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="SKIP" signature="testData([Ljava.lang.Object;)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="testData" is-config="true" duration-ms="0" started-at="2020-01-31T13:24:33Z" finished-at="2020-01-31T13:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testData -->
        <test-method status="SKIP" signature="testSample1(java.lang.String)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="testSample1" duration-ms="5" started-at="2020-01-31T13:24:33Z" data-provider="dp" finished-at="2020-01-31T13:24:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC004]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSample1 -->
        <test-method status="SKIP" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="setResultTestName" is-config="true" duration-ms="0" started-at="2020-01-31T13:24:33Z" finished-at="2020-01-31T13:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="SKIP" signature="testData([Ljava.lang.Object;)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="testData" is-config="true" duration-ms="0" started-at="2020-01-31T13:24:33Z" finished-at="2020-01-31T13:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testData -->
        <test-method status="SKIP" signature="testSample1(java.lang.String)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="testSample1" duration-ms="6" started-at="2020-01-31T13:24:33Z" data-provider="dp" finished-at="2020-01-31T13:24:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TC005]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSample1 -->
        <test-method status="SKIP" signature="setResultTestName(org.testng.ITestResult)[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="setResultTestName" is-config="true" duration-ms="0" started-at="2020-01-31T13:24:33Z" finished-at="2020-01-31T13:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setResultTestName -->
        <test-method status="SKIP" signature="cleanup()[pri:0, instance:com.testautomation.util.ExecuteTestCases@3504a83f]" test-instance-name="" name="cleanup" is-config="true" duration-ms="0" started-at="2020-01-31T13:24:33Z" finished-at="2020-01-31T13:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanup -->
      </class> <!-- com.testautomation.util.ExecuteTestCases -->
    </test> <!-- Test Results -->
  </suite> <!-- Sample Suite -->
</testng-results>
